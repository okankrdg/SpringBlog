@model HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}



<h1 class="alert alert-secondary">
    @if (!string.IsNullOrEmpty(Model.SearchResult))
    {
        <text>
            Search Results for &quot;@Model.SearchResult &quot;
        </text>
    }
    else
    {
        @(Model.SelectedCategory == null ? "My Blog Posts" : Model.SelectedCategory.CategoryName)

    }
</h1>
@if (!Model.Posts.Any() && Model.SearchResult != null)
{
    <h3> No Results Found</h3>
}

@foreach (var item in Model.Posts)
{
    <div class="card mb-4 blog-post">
        @if (!string.IsNullOrEmpty(item.PhotoPath))
        {
            <img class="card-img-top" src="@Url.FeaturedImage(item.PhotoPath)" alt="Card image cap">
        }

        <div class="card-body">
            <h2 class="card-title">@item.Title</h2>
            <div class="blog-post-content">
                @Html.Raw(item.Content)
            </div>
            <a href="@Url.Action("Show","Post",new {id=item.Id, slug=item.Slug})" class="btn btn-primary">Read More &rarr;</a>
        </div>
        <div class="card-footer text-muted clearfix">
            <div class="float-right">
                @{ 
                    var commentCount = item.Comments.Count(x => x.State == CommentState.Approved);
                }
                <i class="fas fa-comments"></i>
                <a href="@Url.Action("Show","Post",new {id=item.Id, slug=item.Slug})#comments">
                    @commentCount Comment@(commentCount == 1 ? "s" : "")
                </a>
            </div>
            Posted on @item.CreationTime.Value.ToShortDateString() by
            <a href="#">@(item.Author.DisplayName ?? "Anonymous")</a>
        </div>
    </div>
}
<!-- Blog Post -->
<!-- Blog Post -->
<!-- Pagination -->
<nav aria-label="Page Number and Paginartion">
    <div class="mb-3 text-center">
        Page @(Model.Posts.PageCount < Model.Posts.PageNumber ? 0 : Model.Posts.PageNumber) of @Model.Posts.PageCount
    </div>
    

    @Html.PagedListPager(Model.Posts, page => Url.Action("Index",
        new { page, q = Model.SearchResult }),
        new PagedListRenderOptionsBase {
            ContainerDivClasses=new string[] {"pagination-container", "d-flex"},
            UlElementClasses=new string[] {"pagination", "mx-auto"},
            LiElementClasses = new string[] { "page-item" },
            PageClasses= new string[] { "page-link"},
            EllipsesElementClass="page-link",
            LinkToFirstPageFormat = "&laquo;",
            LinkToLastPageFormat = "&raquo;",
            LinkToPreviousPageFormat = "&lsaquo;",
            LinkToNextPageFormat = "&rsaquo;",
            MaximumPageNumbersToDisplay=4
        })
</nav>

@section scripts {
    <script>
        $(".blog-post-content").each(function () {
            if ($(this).outerHeight() >= 300) {
                $(this).addClass("long-text");
            }
        });
    </script>
}